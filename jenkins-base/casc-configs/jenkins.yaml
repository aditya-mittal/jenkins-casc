jenkins:
  authorizationStrategy:
    globalMatrix:
      permissions:
      - "Agent/Build:admin"
      - "Agent/Configure:admin"
      - "Agent/Connect:admin"
      - "Agent/Create:admin"
      - "Agent/Delete:admin"
      - "Agent/Disconnect:admin"
      - "Credentials/Create:admin"
      - "Credentials/Delete:admin"
      - "Credentials/ManageDomains:admin"
      - "Credentials/Update:admin"
      - "Credentials/View:admin"
      - "Job/Build:admin"
      - "Job/Cancel:admin"
      - "Job/Configure:admin"
      - "Job/Create:admin"
      - "Job/Delete:admin"
      - "Job/Discover:admin"
      - "Job/Move:admin"
      - "Job/Read:admin"
      - "Job/Workspace:admin"
      - "Lockable Resources/Reserve:admin"
      - "Lockable Resources/Unlock:admin"
      - "Overall/Administer:admin"
      - "Overall/Read:admin"
      - "Run/Delete:admin"
      - "Run/Replay:admin"
      - "Run/Update:admin"
      - "SCM/Tag:admin"
      - "View/Configure:admin"
      - "View/Create:admin"
      - "View/Delete:admin"
      - "View/Read:admin"
      - "Overall/Read:read-only"
      - "Job/Read:read-only"
      - "View/Read:read-only"
      - "Credentials/View:read-only"
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "admin"
        password: ${JENKINS_PASSWORD}
      - id: "read-only"
        password: ${JENKINS_READ_ONLY_PASSWORD}
# Example
#credentials:
#  system:
#    domainCredentials:
#    - credentials:
#      - usernamePassword:
#          id: "gitlab-credentials"
#          username: ${GITLAB_USER_NAME}
#          password: ${GITLAB_PASSWORD}
#          scope: GLOBAL
security:
  queueItemAuthenticator:
    authenticators:
    - global:
        strategy:
          specificUsersAuthorizationStrategy:
            userid: admin
unclassified:
  location:
    url: ${JENKINS_URL}
  buildMonitorView:
    permissionToCollectAnonymousUsageStatistics: false
  timestamperConfig:
    allPipelines: true
jobs:
  - script: >
      folder('freestyle')
  - script: >
      folder('pipeline')
  - script: >
      freeStyleJob('freestyle/seedjob') {
        steps {
          jobDsl {
            scriptText("""
              pipelineJob('freestyle/seeded-pipeline-1') {
                definition {
                  cps {
                    script (\"""
                      pipeline {
                          agent any
                          stages {
                              stage('build') {
                                  steps {
                                      sh script: 'echo "Build"'
                                  }
                              }
                              stage('test') {
                                  steps{
                                      sh script : 'echo "Test"'
                                  }
                              }
                              stage('publish') {
                                  steps{
                                      sh script : 'echo "Publish"'
                                  }
                              }
                          }
                      }\""".stripIndent()
                    )
                  }
                }
              }
              pipelineJob('freestyle/seeded-pipeline-2') {
                definition {
                  cps {
                    script (\"""
                      pipeline {
                          agent any
                          stages {
                              stage('build') {
                                  steps {
                                      sh script: 'echo "Build"'
                                  }
                              }
                              stage('test') {
                                  steps{
                                      sh script : 'echo "Test"'
                                  }
                              }
                              stage('publish') {
                                  steps{
                                      sh script : 'echo "Publish"'
                                  }
                              }
                          }
                      }\""".stripIndent()
                    )
                  }
                }
              }
            """.stripIndent())
          }
        }
      }
  - file: /usr/share/jenkins/ref/casc-configs/seed.groovy